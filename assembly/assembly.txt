$io8051.h

    Org 0000h

      ljmp 0100H

main     

      ORG 0100H

START:  
        
        MOV SP,#70H  	; INICIA O STACK POINTER NESTA POSIÇÃO 
        MOV r1,#30H		; INSERE VALOR 30H NO REGISTRADOR R1	
        MOV r2,#08H		; INSERE VALOR 08H NO REGISTRADOR R2		
        MOV P1,#0FFH	; DEFINE PORTA P1 COMO ENTRADA (TECLADO)
        MOV P2,#00H		; DEFINE PORTA P2 COMO SAIDA (DISPLAY)
        MOV P2,#0FFH	; INICIA DISPLAY APAGADO.
        
        
        
        
       
LINHA0: MOV P1,#0FE	; DEFINE P1 COM VALOR DE 0FEH
        ACALL FILTRO		; CHAMA A ROTINA FILTRO
TECLA1: CJNE A,#0EH,TECLA2	; COMPARA CONSTANTE COM O ACUMULDOR SE FOR DIFERENTE DESVIA
        MOV R0,#01H			; INSERE VALOR 01H NO REGISTRADOR R0
        MOV P2,R0			; MOVE CONTEUDO DE R0 PARA P2
        MOV P0,R0			; MOVE CONTEUDO DE RO PARA P0
        MOV @r1,#01h		; MOVE 01H PARA A POSIÇÃO DIRECIONADA POR R1
        ljmp INCR			; DESVIA PARA A ROTINA INCR
TECLA2: CJNE A,#0DH,TECLA3	; 
        MOV R0,#02H			; 
        MOV P2,R0  			;
        MOV P0,R0			;
        MOV @r1,#02h		;	
        ljmp INCR			;
TECLA3: CJNE A,#0BH,LINHA1	;
        MOV R0,#03H			;
        MOV P2,R0 			;	
        MOV P0,R0			;				
        MOV @r1,#03h		;	
        ljmp INCR			;
LINHA1: MOV P1,#0FDH		;	
        ACALL FILTRO			;
TECLA4: CJNE A,#0EH,TECLA5	;
        MOV R0,#04H       		;
        MOV P2,R0 			;
        MOV P0,R0			;
        MOV @r1,#04h		;
        ljmp INCR			;
        
TECLA5: CJNE A,#0DH,TECLA6
        MOV R0,#05H
        MOV P2,R0   
        MOV P0,R0
        MOV @r1,#05h
        ljmp INCR
TECLA6: CJNE A,#0BH,LINHA2
        MOV R0,#06H
        MOV P2,R0 
        MOV P0,R0
        MOV @r1,#06h
        ljmp INCR  
LINHA2: MOV P1,#0FBH
        ACALL FILTRO
TECLA7: CJNE A,#0EH,TECLA8
        MOV R0,#07H
        MOV P2,R0   
        MOV P0,R0
        MOV @r1,#07h
        ljmp INCR
TECLA8: CJNE A,#0DH,TECLA9
        MOV R0,#08H
        MOV P2,R0 
        MOV P0,R0
        MOV @r1,#08h
        ljmp INCR
TECLA9: CJNE A,#0BH,LINHA3
        MOV R0,#09H
        MOV P2,R0  
        MOV P0,R0
        MOV @r1,#09h
        ljmp INCR
LINHA3: MOV P1,#0F7H
        ACALL FILTRO
TECLAX: CJNE A,#0EH,TECLA0 
        MOV R0,#0FFH  ; APAGA DISPLAY 
        MOV P2,R0	
        MOV P0,R0
        ACALL ALG
TECLA0: CJNE A,#0DH,TECLAY
        MOV R0,#00H
        MOV P2,R0 
        MOV P0,R0
        MOV @r1,#00h
        ljmp INCR
TECLAY: CJNE A,#0BH,VOLTALINHA0
        MOV R0,#0FFH  ; APAGA DISPLAY 
        MOV P2,R0	
        MOV P0,R0
        ljmp LINHA0
	
FILTRO: MOV A,P1		; MOVE CONTEUDO DE P1 PARA ACUMULADOR
        SWAP A		; INVERTE OS 4 BITS MENOS SIGNIFICATIVOS PARA OS 4 MAIS SIGNIFICATIVOS
        ANL A,#0FH		; OPERAÇÃO “E” ENTRE A CONSTANTE E O ACUMULADOR
        RET			; RETORNA
        
VOLTALINHA0:		
          ljmp LINHA0		; DESVIA PARA A ROTINA LINHA0
                   
INCR: INC R1 		; SOMA 1 AO REGISTRADOR R1
      DEC R2		; SUBTRAI 1 DO REGISTRADOR R2
      MOV R4,#10D		; MOVE 10D PARA REGISTRADOR R4
      ACALL DELAY		; CHAMA ROTINA DELAY
      ACALL VOLTA		; CHAMA ROTINA VOLTA
      MOV P2,#0FFH		; APAGA DISPLAY      
VOLTA: MOV A,R2		; MOVE CONTEUDO DE R2 PARA ACUMULADOR
       JZ LINHAZERA		; DESVIA PARA LINHAZERA SE CONTEUDO DO ACUMULADOR FOR IGUAL A ZERO
       LJMP LINHA0		; DESVIA PARA A ROTINA LINHA0
      
LINHAZERA: MOV P1,#0FEH 		; MOVE CONSTANTE PARA PORTA P1 
           ACALL FILTRO		; CHAMA ROTINA FILTRO
           MOV R0,#0FFH  		; APAGA DISPLAY
           MOV P2,R0			; MOVE CONTEUDO DE R0 PARA PORTA P2
           MOV P0,R0			; MOVE CONTEUDO DE R0 PARA PORTA P0
 

ALG:
        
        MOV R2,#02H			; MOVE CONSTANTE PARA REGISTRADOR R2
        MOV R1,#30H			; MOVE CONSTANTE PARA REGISTRADOR R1
       
VOLTA3:	MOV A,@R1		; MOVE CONTEUDO ENDEREÇADO POR R1 PARA ACUMULADOR
	INC R1			; SOMA 1 AO REGISTRADOR R1
        ADD A,@R1			; SOMA CONTEUDO DIRECIONADO POR R1 AO ACUMULADOR
        MOV R4,A			; MOVE CONTEUDO DO ACUMULADOR PARA R4
        INC R1			; SOMA 1 AO REGSTRADOR R1
        MOV B,@R1			; MOVE CONTEUDO DE R1 PARA B
        INC R1			; SOMA 1 AO REGSTRADOR R1
        MOV A,@R1			; MOVE CONTEUDO DE R1 PARA ACUMULADOR 
        MUL AB			; MULTILICA A*B RESULTADO BA
        MOV R5,A			; MOVE CONTEUDO DO ACUMULADOR PARA R5
        MOV A,R4			; MOVE CONTEUDO DE R4 PARA ACUMULADOR
        CLR C			; ZERA O FLAG CARRY 
        SUBB A,R5			; SUBTRAI O REGISTRADOR R5 E O FALG CARRY DO ACUMULADOR
        MOV @R1,A			; MOVE CONTEUDO DO ACUMULADOR PARA POSIÇÃO DIRECIONADA POR R1
        INC R1			; SOMA 1 AO REGSTRADOR R1
        DJNZ R2,VOLTA3		; SUBTRAI 1 DE R2 E DESVIA PARA ROTINA VOLTA3 SE O RESULTADO FOR DIFERENTE DE ZERO
        
        
	
	MOV A,33H 		; MOVE CONSTANTE PARA ACUMULADOR 
	MOV B,37H		; MOVE CONSTANTE PARA B 
	DIV AB			; DIVIDE A POR B ACUMULADOR FICA COM INTEIRO E B COM O RESTO
        ADD A,#00H			; SOMA CONSTANTE AO ACUMULADOR 
        DA A				; SE O CONTEUDO DOS BITS 0-3 FOR MAIORQUE 9 O VALOR 6 É ADICIONADO
        MOV P0,A			; MOVE CONTEUDO DO ACUMULADOR PARA PORTA P0
        MOV R4,#10D			; MOVE O VALOR 10 PARA REGISTRAADOR R4
        ACALL DELAY			; CHAMA ROTINA DELAY
        ljmp LINHA0			; DESVIA PARA ROTINA LINHA0
        
        

DELAY:
        MOV TMOD,#01H			; DEFINE TEMPORIZADOR COM OS VALORES DE 01H
VOLTA2: MOV TH0,#HIGH(65536-50000)	; DEFINE VALOR MAXIMO PARA REGISTRADOR/TEMPORIZADOR 
        MOV TL0,#LOW(65536-50000)		; DEFINE VALOR MÍNIMO PARA REGISTRADOR/TEMPORIZADOR 
        CLR 8dh				; LIMPA 8DH
        SETB 8ch				; SETA EM NÍVEL ALTO 8CH
LOOP:   JNB 8dh,LOOP			; DESVIA SE O BIT ENDEREÇADO ESTIVER ZERADO
        DJNZ R4,VOLTA2			; SUBTRAI 1 DO REGISTRADOR E DESVIA SE DIFERENTE DE ZERO
        RET					; RETORNA
               
	END START			; RETORNA PARA INICIO
        END main				; FIM DO MAIN
